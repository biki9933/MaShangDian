{"remainingRequest":"D:\\test\\smdc\\Vue\\saoma-diancan-pc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\test\\smdc\\Vue\\saoma-diancan-pc\\src\\page\\analysis\\analysis.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\test\\smdc\\Vue\\saoma-diancan-pc\\src\\page\\analysis\\analysis.vue","mtime":1733060103246},{"path":"D:\\test\\smdc\\Vue\\saoma-diancan-pc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733062317302},{"path":"D:\\test\\smdc\\Vue\\saoma-diancan-pc\\node_modules\\babel-loader\\lib\\index.js","mtime":1733062318538},{"path":"D:\\test\\smdc\\Vue\\saoma-diancan-pc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733062317302},{"path":"D:\\test\\smdc\\Vue\\saoma-diancan-pc\\node_modules\\vue-loader\\lib\\index.js","mtime":1733062316941}],"contextDependencies":[],"result":["\r\nimport { mapGetters } from 'vuex'\r\nimport * as echarts from 'echarts'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      statistics: {\r\n        todayOrders: 0,\r\n        todayAmount: 0,\r\n        monthOrders: 0,\r\n        monthAmount: 0\r\n      },\r\n      timeRange: 'week',\r\n      hotDishes: [],\r\n      salesChart: null\r\n    }\r\n  },\r\n  \r\n  computed: {\r\n    ...mapGetters(['currentMerchant'])\r\n  },\r\n  \r\n  created() {\r\n    this.getStatistics()\r\n    this.getHotDishes()\r\n  },\r\n  \r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.initSalesChart()\r\n    })\r\n  },\r\n  \r\n  beforeDestroy() {\r\n    if (this.salesChart) {\r\n      this.salesChart.dispose()\r\n    }\r\n  },\r\n  \r\n  methods: {\r\n    // 获取统计数据\r\n    async getStatistics() {\r\n      try {\r\n        const res = await new this.Request(\r\n          this.Urls.order.statistics(this.currentMerchant.id)\r\n        ).modeget({\r\n          timeRange: this.timeRange\r\n        })\r\n        \r\n        if (res.code === 0) {\r\n          this.statistics = res.data\r\n          this.updateSalesChart(res.data.salesTrend)\r\n        }\r\n      } catch (error) {\r\n        console.error('获取统计数据失败：', error)\r\n        this.$message.error('获取统计数据失败')\r\n      }\r\n    },\r\n    \r\n    // 获取热销商品数据\r\n    async getHotDishes() {\r\n      try {\r\n        const res = await new this.Request(\r\n          this.Urls.dish.sales(this.currentMerchant.id)\r\n        ).modeget()\r\n        \r\n        if (res.code === 0) {\r\n          this.hotDishes = res.data\r\n        }\r\n      } catch (error) {\r\n        console.error('获取热销商品数据失败：', error)\r\n        this.$message.error('获取热销商品数据失败')\r\n      }\r\n    },\r\n    \r\n    // 初始化销售趋势图\r\n    initSalesChart() {\r\n      this.salesChart = echarts.init(this.$refs.salesChart)\r\n      this.salesChart.setOption({\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: []\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '销售额',\r\n            type: 'line',\r\n            data: []\r\n          }\r\n        ]\r\n      })\r\n      \r\n      window.addEventListener('resize', this.resizeChart)\r\n    },\r\n    \r\n    // 更新销售趋势图数据\r\n    updateSalesChart(data) {\r\n      if (!this.salesChart) return\r\n      \r\n      const dates = data.map(item => item.date)\r\n      const amounts = data.map(item => item.amount)\r\n      \r\n      this.salesChart.setOption({\r\n        xAxis: {\r\n          data: dates\r\n        },\r\n        series: [\r\n          {\r\n            data: amounts\r\n          }\r\n        ]\r\n      })\r\n    },\r\n    \r\n    // 图表自适应\r\n    resizeChart() {\r\n      if (this.salesChart) {\r\n        this.salesChart.resize()\r\n      }\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["analysis.vue"],"names":[],"mappings":";AA6EA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"analysis.vue","sourceRoot":"src/page/analysis","sourcesContent":["<template>\r\n  <div class=\"analysis-container\">\r\n    <!-- 商户信息卡片 -->\r\n    <el-card class=\"merchant-card\">\r\n      <div slot=\"header\">\r\n        <span>商户信息</span>\r\n      </div>\r\n      <div class=\"merchant-info\">\r\n        <p>商户名称：{{ currentMerchant.name }}</p>\r\n        <p>商户ID：{{ currentMerchant.id }}</p>\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 数据概览 -->\r\n    <el-row :gutter=\"20\" class=\"data-overview\">\r\n      <el-col :span=\"6\">\r\n        <el-card class=\"data-card\">\r\n          <div class=\"data-item\">\r\n            <div class=\"data-title\">今日订单数</div>\r\n            <div class=\"data-value\">{{ statistics.todayOrders }}</div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card class=\"data-card\">\r\n          <div class=\"data-item\">\r\n            <div class=\"data-title\">今日营业额</div>\r\n            <div class=\"data-value\">¥{{ statistics.todayAmount }}</div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card class=\"data-card\">\r\n          <div class=\"data-item\">\r\n            <div class=\"data-title\">本月订单数</div>\r\n            <div class=\"data-value\">{{ statistics.monthOrders }}</div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card class=\"data-card\">\r\n          <div class=\"data-item\">\r\n            <div class=\"data-title\">本月营业额</div>\r\n            <div class=\"data-value\">¥{{ statistics.monthAmount }}</div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 销售趋势图 -->\r\n    <el-card class=\"chart-card\">\r\n      <div slot=\"header\">\r\n        <span>销售趋势</span>\r\n        <el-radio-group v-model=\"timeRange\" size=\"small\" @change=\"getStatistics\">\r\n          <el-radio-button label=\"week\">最近一周</el-radio-button>\r\n          <el-radio-button label=\"month\">最近一月</el-radio-button>\r\n        </el-radio-group>\r\n      </div>\r\n      <div class=\"chart-container\" ref=\"salesChart\"></div>\r\n    </el-card>\r\n\r\n    <!-- 热销商品排行 -->\r\n    <el-card class=\"chart-card\">\r\n      <div slot=\"header\">\r\n        <span>热销商品排行</span>\r\n      </div>\r\n      <el-table :data=\"hotDishes\" border>\r\n        <el-table-column prop=\"name\" label=\"菜品名称\"></el-table-column>\r\n        <el-table-column prop=\"categoryName\" label=\"所属分类\"></el-table-column>\r\n        <el-table-column prop=\"salesCount\" label=\"销量\"></el-table-column>\r\n        <el-table-column prop=\"salesAmount\" label=\"销售额\"></el-table-column>\r\n      </el-table>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nimport * as echarts from 'echarts'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      statistics: {\r\n        todayOrders: 0,\r\n        todayAmount: 0,\r\n        monthOrders: 0,\r\n        monthAmount: 0\r\n      },\r\n      timeRange: 'week',\r\n      hotDishes: [],\r\n      salesChart: null\r\n    }\r\n  },\r\n  \r\n  computed: {\r\n    ...mapGetters(['currentMerchant'])\r\n  },\r\n  \r\n  created() {\r\n    this.getStatistics()\r\n    this.getHotDishes()\r\n  },\r\n  \r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.initSalesChart()\r\n    })\r\n  },\r\n  \r\n  beforeDestroy() {\r\n    if (this.salesChart) {\r\n      this.salesChart.dispose()\r\n    }\r\n  },\r\n  \r\n  methods: {\r\n    // 获取统计数据\r\n    async getStatistics() {\r\n      try {\r\n        const res = await new this.Request(\r\n          this.Urls.order.statistics(this.currentMerchant.id)\r\n        ).modeget({\r\n          timeRange: this.timeRange\r\n        })\r\n        \r\n        if (res.code === 0) {\r\n          this.statistics = res.data\r\n          this.updateSalesChart(res.data.salesTrend)\r\n        }\r\n      } catch (error) {\r\n        console.error('获取统计数据失败：', error)\r\n        this.$message.error('获取统计数据失败')\r\n      }\r\n    },\r\n    \r\n    // 获取热销商品数据\r\n    async getHotDishes() {\r\n      try {\r\n        const res = await new this.Request(\r\n          this.Urls.dish.sales(this.currentMerchant.id)\r\n        ).modeget()\r\n        \r\n        if (res.code === 0) {\r\n          this.hotDishes = res.data\r\n        }\r\n      } catch (error) {\r\n        console.error('获取热销商品数据失败：', error)\r\n        this.$message.error('获取热销商品数据失败')\r\n      }\r\n    },\r\n    \r\n    // 初始化销售趋势图\r\n    initSalesChart() {\r\n      this.salesChart = echarts.init(this.$refs.salesChart)\r\n      this.salesChart.setOption({\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: []\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '销售额',\r\n            type: 'line',\r\n            data: []\r\n          }\r\n        ]\r\n      })\r\n      \r\n      window.addEventListener('resize', this.resizeChart)\r\n    },\r\n    \r\n    // 更新销售趋势图数据\r\n    updateSalesChart(data) {\r\n      if (!this.salesChart) return\r\n      \r\n      const dates = data.map(item => item.date)\r\n      const amounts = data.map(item => item.amount)\r\n      \r\n      this.salesChart.setOption({\r\n        xAxis: {\r\n          data: dates\r\n        },\r\n        series: [\r\n          {\r\n            data: amounts\r\n          }\r\n        ]\r\n      })\r\n    },\r\n    \r\n    // 图表自适应\r\n    resizeChart() {\r\n      if (this.salesChart) {\r\n        this.salesChart.resize()\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.analysis-container {\r\n  padding: 20px;\r\n}\r\n\r\n.merchant-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.merchant-info p {\r\n  margin: 10px 0;\r\n  font-size: 14px;\r\n}\r\n\r\n.data-overview {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.data-card {\r\n  height: 120px;\r\n}\r\n\r\n.data-item {\r\n  text-align: center;\r\n  padding: 20px 0;\r\n}\r\n\r\n.data-title {\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.data-value {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #409EFF;\r\n}\r\n\r\n.chart-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-card .el-card__header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.chart-container {\r\n  height: 400px;\r\n}\r\n</style>\r\n"]}]}