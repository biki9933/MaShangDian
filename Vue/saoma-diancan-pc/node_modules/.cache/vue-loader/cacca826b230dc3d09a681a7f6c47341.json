{"remainingRequest":"D:\\test\\smdc\\Vue\\saoma-diancan-pc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\test\\smdc\\Vue\\saoma-diancan-pc\\src\\page\\category\\category.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\test\\smdc\\Vue\\saoma-diancan-pc\\src\\page\\category\\category.vue","mtime":1733060111530},{"path":"D:\\test\\smdc\\Vue\\saoma-diancan-pc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733062317302},{"path":"D:\\test\\smdc\\Vue\\saoma-diancan-pc\\node_modules\\babel-loader\\lib\\index.js","mtime":1733062318538},{"path":"D:\\test\\smdc\\Vue\\saoma-diancan-pc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733062317302},{"path":"D:\\test\\smdc\\Vue\\saoma-diancan-pc\\node_modules\\vue-loader\\lib\\index.js","mtime":1733062316941}],"contextDependencies":[],"result":["\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      categoryList: [],\r\n      dialogVisible: false,\r\n      dialogType: 'add', // add or edit\r\n      submitLoading: false,\r\n      categoryForm: {\r\n        id: '',\r\n        name: '',\r\n        sort: 1\r\n      },\r\n      rules: {\r\n        name: [\r\n          { required: true, message: '请输入分类名称', trigger: 'blur' },\r\n          { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\r\n        ],\r\n        sort: [\r\n          { required: true, message: '请输入排序号', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \r\n  computed: {\r\n    ...mapGetters(['currentMerchant']),\r\n    dialogTitle() {\r\n      return this.dialogType === 'add' ? '新增分类' : '编辑分类'\r\n    }\r\n  },\r\n  \r\n  created() {\r\n    this.getCategoryList()\r\n  },\r\n  \r\n  methods: {\r\n    // 获取分类列表\r\n    async getCategoryList() {\r\n      try {\r\n        const res = await new this.Request(\r\n          this.Urls.category.list(this.currentMerchant.id)\r\n        ).modeget()\r\n        \r\n        if (res.code === 0) {\r\n          this.categoryList = res.data\r\n        }\r\n      } catch (error) {\r\n        console.error('获取分类列表失败：', error)\r\n        this.$message.error('获取分类列表失败')\r\n      }\r\n    },\r\n    \r\n    // 显示新增弹窗\r\n    showAddDialog() {\r\n      this.dialogType = 'add'\r\n      this.categoryForm = {\r\n        name: '',\r\n        sort: 1\r\n      }\r\n      this.dialogVisible = true\r\n    },\r\n    \r\n    // 显示编辑弹窗\r\n    showEditDialog(category) {\r\n      this.dialogType = 'edit'\r\n      this.categoryForm = { ...category }\r\n      this.dialogVisible = true\r\n    },\r\n    \r\n    // 提交表单\r\n    submitForm() {\r\n      this.$refs.categoryForm.validate(async valid => {\r\n        if (valid) {\r\n          this.submitLoading = true\r\n          try {\r\n            const url = this.dialogType === 'add' \r\n              ? this.Urls.category.add \r\n              : this.Urls.category.update\r\n            \r\n            const method = this.dialogType === 'add' ? 'modepost' : 'modeput'\r\n            const data = {\r\n              ...this.categoryForm,\r\n              merchantId: this.currentMerchant.id\r\n            }\r\n            \r\n            const res = await new this.Request(url)[method](data)\r\n            \r\n            if (res.code === 0) {\r\n              this.$message.success(`${this.dialogType === 'add' ? '新增' : '编辑'}成功`)\r\n              this.dialogVisible = false\r\n              this.getCategoryList()\r\n            } else {\r\n              this.$message.error(res.msg || `${this.dialogType === 'add' ? '新增' : '编辑'}失败`)\r\n            }\r\n          } catch (error) {\r\n            this.$message.error(`${this.dialogType === 'add' ? '新增' : '编辑'}失败`)\r\n          } finally {\r\n            this.submitLoading = false\r\n          }\r\n        }\r\n      })\r\n    },\r\n    \r\n    // 删除分类\r\n    async deleteCategory(category) {\r\n      try {\r\n        await this.$confirm('确认删除该分类吗？删除后无法恢复', '提示', {\r\n          type: 'warning'\r\n        })\r\n        \r\n        const res = await new this.Request(\r\n          this.Urls.category.delete(category.id)\r\n        ).modedelete()\r\n        \r\n        if (res.code === 0) {\r\n          this.$message.success('删除成功')\r\n          this.getCategoryList()\r\n        } else {\r\n          this.$message.error(res.msg || '删除失败')\r\n        }\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          this.$message.error('删除失败')\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["category.vue"],"names":[],"mappings":";AAufile":"category.vue","sourceRoot":"src/page/category","sourcesContent":["<template>\r\n  <div class=\"category-container\">\r\n    <!-- 操作栏 -->\r\n    <div class=\"operation-bar\">\r\n      <el-button type=\"primary\" @click=\"showAddDialog\">新增分类</el-button>\r\n    </div>\r\n\r\n    <!-- 分类列表 -->\r\n    <el-table :data=\"categoryList\" border>\r\n      <el-table-column prop=\"name\" label=\"分类名称\"></el-table-column>\r\n      <el-table-column prop=\"sort\" label=\"排序\" width=\"120\"></el-table-column>\r\n      <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"180\"></el-table-column>\r\n      <el-table-column label=\"操作\" width=\"200\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"text\" @click=\"showEditDialog(scope.row)\">编辑</el-button>\r\n          <el-button type=\"text\" @click=\"deleteCategory(scope.row)\" class=\"delete-btn\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 新增/编辑分类弹窗 -->\r\n    <el-dialog :title=\"dialogTitle\" :visible.sync=\"dialogVisible\" width=\"30%\">\r\n      <el-form :model=\"categoryForm\" :rules=\"rules\" ref=\"categoryForm\" label-width=\"80px\">\r\n        <el-form-item label=\"分类名称\" prop=\"name\">\r\n          <el-input v-model=\"categoryForm.name\" placeholder=\"请输入分类名称\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"排序\" prop=\"sort\">\r\n          <el-input-number v-model=\"categoryForm.sort\" :min=\"1\" :max=\"99\"></el-input-number>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitForm\" :loading=\"submitLoading\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      categoryList: [],\r\n      dialogVisible: false,\r\n      dialogType: 'add', // add or edit\r\n      submitLoading: false,\r\n      categoryForm: {\r\n        id: '',\r\n        name: '',\r\n        sort: 1\r\n      },\r\n      rules: {\r\n        name: [\r\n          { required: true, message: '请输入分类名称', trigger: 'blur' },\r\n          { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\r\n        ],\r\n        sort: [\r\n          { required: true, message: '请输入排序号', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \r\n  computed: {\r\n    ...mapGetters(['currentMerchant']),\r\n    dialogTitle() {\r\n      return this.dialogType === 'add' ? '新增分类' : '编辑分类'\r\n    }\r\n  },\r\n  \r\n  created() {\r\n    this.getCategoryList()\r\n  },\r\n  \r\n  methods: {\r\n    // 获取分类列表\r\n    async getCategoryList() {\r\n      try {\r\n        const res = await new this.Request(\r\n          this.Urls.category.list(this.currentMerchant.id)\r\n        ).modeget()\r\n        \r\n        if (res.code === 0) {\r\n          this.categoryList = res.data\r\n        }\r\n      } catch (error) {\r\n        console.error('获取分类列表失败：', error)\r\n        this.$message.error('获取分类列表失败')\r\n      }\r\n    },\r\n    \r\n    // 显示新增弹窗\r\n    showAddDialog() {\r\n      this.dialogType = 'add'\r\n      this.categoryForm = {\r\n        name: '',\r\n        sort: 1\r\n      }\r\n      this.dialogVisible = true\r\n    },\r\n    \r\n    // 显示编辑弹窗\r\n    showEditDialog(category) {\r\n      this.dialogType = 'edit'\r\n      this.categoryForm = { ...category }\r\n      this.dialogVisible = true\r\n    },\r\n    \r\n    // 提交表单\r\n    submitForm() {\r\n      this.$refs.categoryForm.validate(async valid => {\r\n        if (valid) {\r\n          this.submitLoading = true\r\n          try {\r\n            const url = this.dialogType === 'add' \r\n              ? this.Urls.category.add \r\n              : this.Urls.category.update\r\n            \r\n            const method = this.dialogType === 'add' ? 'modepost' : 'modeput'\r\n            const data = {\r\n              ...this.categoryForm,\r\n              merchantId: this.currentMerchant.id\r\n            }\r\n            \r\n            const res = await new this.Request(url)[method](data)\r\n            \r\n            if (res.code === 0) {\r\n              this.$message.success(`${this.dialogType === 'add' ? '新增' : '编辑'}成功`)\r\n              this.dialogVisible = false\r\n              this.getCategoryList()\r\n            } else {\r\n              this.$message.error(res.msg || `${this.dialogType === 'add' ? '新增' : '编辑'}失败`)\r\n            }\r\n          } catch (error) {\r\n            this.$message.error(`${this.dialogType === 'add' ? '新增' : '编辑'}失败`)\r\n          } finally {\r\n            this.submitLoading = false\r\n          }\r\n        }\r\n      })\r\n    },\r\n    \r\n    // 删除分类\r\n    async deleteCategory(category) {\r\n      try {\r\n        await this.$confirm('确认删除该分类吗？删除后无法恢复', '提示', {\r\n          type: 'warning'\r\n        })\r\n        \r\n        const res = await new this.Request(\r\n          this.Urls.category.delete(category.id)\r\n        ).modedelete()\r\n        \r\n        if (res.code === 0) {\r\n          this.$message.success('删除成功')\r\n          this.getCategoryList()\r\n        } else {\r\n          this.$message.error(res.msg || '删除失败')\r\n        }\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          this.$message.error('删除失败')\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.category-container {\r\n  padding: 20px;\r\n}\r\n\r\n.operation-bar {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.delete-btn {\r\n  color: #F56C6C;\r\n}\r\n\r\n.dialog-footer {\r\n  text-align: right;\r\n}\r\n</style>\r\n"]}]}